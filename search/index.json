[{"content":"2025\r📅 04-07\r✅ 今日完成\r1. 核心任务\r部分snmp设备和HTTP站点拨测接入 ■■■□□ 60% SOC例会 ■■■■■ 100% 部分soc业务系统基线、漏洞清单汇总和邮件通知 ■■■■■ 100% 2. 临时任务\r⚠️ 今日问题\r部分主机9100、DCN网络联通问题 📅 04-08\r✅ 今日完成\r1. 核心任务\rsnmp告警规则编写、部分snmp、http资源拨测接入 ■■■■□ 80% 成果：完成snmp设备离线告警规则编写 研发例会 ■■■■■ 100% 网络设备接入SNMP连通性测试 ■■■■□ 80% 2. 临时任务\r协助测试钓鱼演练 ■■■■■ 100% ⚠️ 今日问题\rDCN网络联通问题 基线和漏洞修复进度较慢，需要催 📅 04-16\r✅ 今日完成\r1. 核心任务\rweb堡垒立项报告修改 ■■■□□ 50% 防火墙配置文件比对脚本 ■■■□□ 80% 成果：完成防火墙配置文件比对结果HTML生成 ⚠️ 今日问题\r需要补充web堡垒立项PPT中的项目目标、模块说明、外包需求等 📅 04-17\r✅ 今日完成\r1. 核心任务\rweb堡垒立项报告修改 ■■■■■ 100% 防火墙配置文件比对脚本 ■■■■■ 100% 2. 临时任务\r协助测试钓鱼演练 ■■■■■ 100% ⚠️ 今日问题\r部分防火墙配置文件读取乱码，无法比对，暂时忽略. ","date":"2025-04-08T14:19:12+08:00","image":"https://determine111.github.io/hugo-dev/post/daily/helena-hertz-wWZzXlDpMog-unsplash.jpg","permalink":"https://determine111.github.io/hugo-dev/p/%E6%97%A5%E5%B8%B8%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/","title":"Daily Work"},{"content":"📅 日报 - {日期}\r​今日状态​：🌞 晴 / 🌧️ 雨 / ⛅ 多云\n​优先级​：🔥 紧急 | ⚡ 重要 | 💡 常规\n✅ 今日完成\r1. 核心任务\r任务名称1 进度：■■■■□ 80% 成果：完成XX模块开发 耗时：3h 任务名称2 成果：修复XX漏洞 2. 临时任务\r紧急处理XX客户需求 ⚠️ 今日问题\r问题描述 解决方案 负责人 状态 XX服务响应延迟 增加节点/优化查询 张三 🟡 跟进中 接口文档缺失 补充Swagger文档 李四 ✅ 已解决 📌 明日计划\r1. 重点任务\r任务名称 目标：完成XX功能联调 预估耗时：4h 2. 待跟进事项\r跟进XX项目测试报告 📊 数据看板\r💡 心得总结\r✨ 今日最佳实践：采用XX方法提升编译效率\n❗ 待改进点：需求评审需更细致\n","date":"2025-04-08T14:19:12+08:00","permalink":"https://determine111.github.io/hugo-dev/p/%E6%97%A5%E6%8A%A5%E6%A8%A1%E6%9D%BF/","title":"日报模板"},{"content":" CentOS7升级openssh-9.6p1\r前置准备\r注意：稳妥起见，建议在升级前，安装xinetd和telnet服务，以保障在openssh升级期间服务器中断时，可以使用telnet登录服务器。\n延长超时断开时间（防止安装过程中较短时间不操作导致退出后，导致无法使用ssh登录）\n1 2 3 4 5 6 7 8 9 10 11 12 vi /etc/profile #将最底下的TMOUT=300（5分钟） 延长至半小时以上 export TMOUT=1800 #修改后执行保存并生效 source /etc/profile #将TMOUT复原确保基线扫描正常 vi /etc/profile #将最底下的TMOUT=300（5分钟） 延长至半小时以上 export TMOUT=1800 source /etc/profile 目前安装成功的服务器信息如下\n1 2 3 4 5 6 7 8 9 10 11 12 [jcm@BINSCACmwH ~]$ ssh -V OpenSSH_9.6p1, OpenSSL 1.1.1f 31 Mar 2020 [jcm@BINSCACmwH ~]$ uname -a Linux BINSCACmwH 4.19.90-2102.2.0.0062.ctl2.x86_64 #1 SMP Thu Mar 10 03:34:36 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux [jcm@BINSCACmwH ~]$ cat /etc/redhat-release ctyunos release 2.0.1 #openssh-9.6p1需要 OpenSSL 在1.1.1以上 [jcm@BINSCACmwH ~]$ openssl version OpenSSL 1.1.1f 31 Mar 2020 其他依赖可以在编译过程中，根据报错进行通过 yum install 进行安装 安装\r安装OPenssl1.1.1f依赖（已安装1.1.1以上版本可跳过，需要知晓openssldir目录）\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #解压安装包，安装包放置路径（/usr/local） tar -zxf openssl-1.1.1f.tar.gz #进入安装目录 cd openssl-1.1.1q #添加路径配置进行初始化 ./config -Wl,-rpath=/usr/lib64 --prefix=/usr/local/openssl --openssldir=/usr/local/openssl --libdir=/usr/lib64 #执行安装 make -j 4 \u0026amp;\u0026amp; make install # 备份旧openssl版本，创建软连接 mv /usr/bin/openssl /usr/bin/openssl.bak ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl #验证新版本 openssl version 安装zlib1.3.1依赖（已安装zlib可跳过，需要知晓zlib安装目录）\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #解压安装包，安装包放置路径（/usr/local） tar xf zlib-1.3.1tar.gz #进入安装目录下 cd zlib-1.3.1 #添加prefix路径 ./configure --prefix=/usr/local/zlib #编译执行安装 make make check make install #写入动态库的路径 echo \u0026#34;/usr/local/zlib/lib/\u0026#34; \u0026gt;\u0026gt; /etc/ld.so.conf ldconfig -v #查看软连接 ll /lib64/libz.* #进入编译目录下 cd /usr/local/zlib/lib/ #复制执行文件到/lib64目录下 cp libz.so.1.3 /lib64/libz.so.1.3 #进入lib64目录下创建软连接 cd /lib64 ln -snf libz.so.1.3 /lib64/libz.so ln -snf libz.so.1.3 /lib64/libz.so.1 安装openssh-9.6p1\r1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 #备份openssh mkdir /etc/ssh/bak cp /etc/ssh/ssh* /etc/ssh/bak \u0026amp;\u0026amp; cp /etc/ssh/m* /etc/ssh/bak cp /etc/pam.d/sshd ~ #（谨慎操作）卸载openssh--(为防止突然断线-也可以不删除，直接装) rpm -e `rpm -qa | grep openssh` --nodeps #进入/usr/local解压安装包 tar -xzvf openssh-9.6p1.tar.gz #进入安装目录 cd openssh-9.6p1 #初始化安装 --with-ssl-dir=实际安装目录 --with-zlib=时间安装目录 ./configure --prefix=/usr/ --sysconfdir=/etc/ssh --with-pam --with-md5-passwords --with-tcp-wrappers --with-ssl-dir=/usr/local/openssl --with-zlib=/usr/local/zlib --mandir=/usr/share/man # !!!遇到编译失败问题,根据提示或者yum install 安装指定包进行操作，之后再一次执行 configure #执行安装 make \u0026amp;\u0026amp; make install #授权 chmod 600 /etc/ssh/ssh_host_rsa_key chmod 600 /etc/ssh/ssh_host_ecdsa_key chmod 600 /etc/ssh/ssh_host_ed25519_key #配置 cp -p contrib/redhat/sshd.init /etc/init.d/sshd chmod +x /etc/init.d/sshd echo \u0026#34;PermitRootLogin no\u0026#34; \u0026gt;\u0026gt; /etc/ssh/sshd_config #确保基线扫描通过 sed -i \u0026#39;/UsePAM no/c\\UsePAM yes\u0026#39; /etc/ssh/sshd_config sed -i \u0026#39;/^Subsystem/c\\Subsystem sftp /usr/libexec/sftp-server\u0026#39; /etc/ssh/sshd_config sed -i \u0026#39;/^SELINUX=enforcing/c\\SELINUX=disabled\u0026#39; /etc/selinux/config setenforce 0 #查看版本 sshd -v 测试\r1 2 3 4 5 6 7 8 9 10 #设置sshd开机自启动 chkconfig --add sshd chkconfig sshd on chkconfig --list sshd #重启服务 mv /usr/lib/systemd/system/sshd.service /usr/lib/systemd/system/sshd.service.bak systemctl daemon-reload systemctl restart sshd systemctl status sshd ","date":"2025-04-08T10:27:13+08:00","permalink":"https://determine111.github.io/hugo-dev/p/openssh-9.6p1/","title":"Openssh Update"},{"content":"基础用法\r实现一个简单的爬虫程序，使用Go Colly库，获取目标URL的可达性、HTTP状态码、内容大小、随机中文字符串等。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; \u0026#34;regexp\u0026#34; \u0026#34;time\u0026#34; \u0026#34;github.com/gocolly/colly/v2\u0026#34; ) func main() { targetURL := \u0026#34;https://example.com\u0026#34; // 替换为你的目标 URL // 初始化 Collector，开启异步模式并限制并发 c := colly.NewCollector( colly.UserAgent(\u0026#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\u0026#34;), colly.Async(true), ) // 存储结果的结构体 result := struct { Reachable bool StatusCode int RedirectChain []string // 记录所有重定向的 URL ContentSize int ChineseMatch string Error error }{} // 正则表达式匹配连续4个及以上中文字符 chineseRegex := regexp.MustCompile(`[\\p{Han}]{4,}`) // --- 注册回调函数 --- // 请求前：记录初始 URL c.OnRequest(func(r *colly.Request) { result.RedirectChain = append(result.RedirectChain, r.URL.String()) }) // 响应成功：处理数据 c.OnResponse(func(r *colly.Response) { result.Reachable = true result.StatusCode = r.StatusCode result.ContentSize = len(r.Body) // 提取中文文本（随机选一个） matches := chineseRegex.FindAllString(string(r.Body), -1) if len(matches) \u0026gt; 0 { rand.Seed(time.Now().UnixNano()) result.ChineseMatch = matches[rand.Intn(len(matches))] } }) // 发生重定向：记录中间 URL c.OnRedirect(func(r *colly.Request, resp *colly.Response) { result.RedirectChain = append(result.RedirectChain, r.URL.String()) }) // 错误处理 c.OnError(func(r *colly.Response, err error) { result.Error = err if r != nil { result.StatusCode = r.StatusCode } }) // --- 开始爬取 --- err := c.Visit(targetURL) if err != nil { result.Error = err } c.Wait() // 等待异步请求完成 // --- 输出结果 --- fmt.Println(\u0026#34;URL 可达性:\u0026#34;, result.Reachable) if result.Error != nil { fmt.Println(\u0026#34;错误信息:\u0026#34;, result.Error) } fmt.Println(\u0026#34;HTTP 状态码:\u0026#34;, result.StatusCode) fmt.Println(\u0026#34;内容大小:\u0026#34;, result.ContentSize, \u0026#34;bytes\u0026#34;) if len(result.RedirectChain) \u0026gt; 1 { fmt.Println(\u0026#34;重定向链:\u0026#34;) for i, url := range result.RedirectChain { fmt.Printf(\u0026#34; [%d] %s\\n\u0026#34;, i, url) } } else { fmt.Println(\u0026#34;无重定向\u0026#34;) } if result.ChineseMatch != \u0026#34;\u0026#34; { fmt.Println(\u0026#34;随机中文字符串:\u0026#34;, result.ChineseMatch) } else { fmt.Println(\u0026#34;未找到连续4个及以上中文字符\u0026#34;) } } ","date":"2025-04-01T16:00:36+08:00","permalink":"https://determine111.github.io/hugo-dev/p/%E7%88%AC%E8%99%AB/","title":"Go Colly"},{"content":"基础配置\r官方地址：参考文档\n配置文件：\n选择要监视的进程并将它的分组，提供命令行参数或者使用YAML配置文件。 配置模板如下： process_names:\nmatcher1 matcher2 \u0026hellip; matcherN 例如：监控所有的服务进程 process_names: name: \u0026ldquo;{{.Comm}}\u0026rdquo; cmdline: \u0026lsquo;.+\u0026rsquo; 配置模板选项如下：\n{{.Comm}} 包含原始可执行文件的basename，/proc//stat 中的换句话说，2nd 字段\n{{.ExeBase}} 包含可执行文件的basename\n{{.ExeFull}} 包含可执行文件的完全限定路径\n{{.Username}} 包含有效用户的用户名\n{{.Matches}} 映射包含应用命令行tlb所产生的所有匹配项\nprocess_names中的每个项目都必须包含一个或多个选择器(comm，exe或cmdline), 如果存在多个选择器，则它们必须全部匹配。 每个选择器都是一个字符串列表，用于与进程的comm，argv [0]匹配；对于cmdline，则是一个适用于命令行的正则表达式。 cmdline regexp使用Go语法。\n对于comm和exe，字符串列表是一个OR，这意味着与任何字符串匹配的任何进程都将添加到该项目的组中。\n对于cmdline，正则表达式列表为AND，表示它们都必须匹配。 正则表达式中的任何捕获组都必须使用？P 选项为捕获分配一个名称，该名称用于填充.Matches。`\n","date":"2025-04-01T16:00:36+08:00","permalink":"https://determine111.github.io/hugo-dev/p/%E7%9B%91%E6%8E%A7%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81/","title":"进程监控Process Exporter"},{"content":"正文测试\r而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用\r思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片\r1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://determine111.github.io/hugo-dev/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu_2307260c751d0e0b.jpg","permalink":"https://determine111.github.io/hugo-dev/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings\rThe following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1\rH2\rH3\rH4\rH5\rH6\rParagraph\rXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes\rThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution\rTiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution\rDon\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables\rTables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables\rItalics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks\rCode block with backticks\r1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces\r\u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block with Hugo\u0026rsquo;s internal highlight shortcode\r1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block\r1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types\rOrdered List\rFirst item Second item Third item Unordered List\rList item Another item And another item Nested list\rFruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark\rGIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image\rThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://determine111.github.io/hugo-dev/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu_e95a4276bf860a84.jpg","permalink":"https://determine111.github.io/hugo-dev/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt\rThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat\rVicta caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://determine111.github.io/hugo-dev/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu_c1ca39d792aee4ab.jpg","permalink":"https://determine111.github.io/hugo-dev/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples\rInline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n$$\r\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://determine111.github.io/hugo-dev/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://determine111.github.io/hugo-dev/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu_27b8954607cdb515.jpg","permalink":"https://determine111.github.io/hugo-dev/p/emoji-support/","title":"Emoji Support"}]